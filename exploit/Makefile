CC_x86 = gcc
CFLAGS_x86 := -Wall -Werror

TOOLCHAIN_ARM ?= arm-unknown-eabi-
CC_ARM = $(TOOLCHAIN_ARM)gcc
AS_ARM = $(TOOLCHAIN_ARM)as
OBJCOPY_ARM = $(TOOLCHAIN_ARM)objcopy

CFLAGS_ARM := -march=armv4t -mthumb -Wall -Werror -Os -MMD -ffreestanding \
	-fno-common	-fomit-frame-pointer -nostdlib -fno-builtin-printf \
	-fno-asynchronous-unwind-tables -fPIE -fno-builtin -fno-exceptions \
	-Wl,--no-dynamic-linker,--build-id=none,-T,payloads/romhax.ld

# shameless copypasta from https://stackoverflow.com/a/2908351/375416
C_FILES_ARM := $(wildcard payloads/*.c)
OBJ_FILES_ARM := $(addprefix obj_arm/,$(notdir $(C_FILES_ARM:.c=.o)))

all: shofel2_t124 reset_example.bin jtag_example.bin

shofel2_t124: shofel2_t124.c mini_libusb.c
	$(CC_x86) $(CFLAGS_x86) -o $@ $^

obj_arm/%.o: payloads/%.c
	$(CC_ARM) $(CFLAGS_ARM) -c -o $@ $<

%.bin: %.elf
	$(OBJCOPY_ARM) -O binary $< $@

reset_example.elf: obj_arm/reset_example.o 
	$(CC_ARM) $(CFLAGS_ARM) -o $@ $^


jtag_example.elf: obj_arm/jtag_example.o 
	$(CC_ARM) $(CFLAGS_ARM) -o $@ $^

clean:
	rm -f $(OBJ_FILES_ARM)
	rm -f shofel2_t124 reset_example.bin reset_example.elf jtag_example.bin jtag_example.elf

